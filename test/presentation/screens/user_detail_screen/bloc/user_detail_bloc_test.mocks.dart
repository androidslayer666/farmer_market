// Mocks generated by Mockito 5.1.0 from annotations
// in farmer_market/test/presentation/screens/user_detail_screen/bloc/user_detail_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:typed_data' as _i10;

import 'package:farmer_market/data/repository/address_repository/address_repository.dart'
    as _i3;
import 'package:farmer_market/data/repository/auth_repository/auth_repository.dart'
    as _i7;
import 'package:farmer_market/data/repository/models/api/address.dart' as _i6;
import 'package:farmer_market/data/repository/models/api/suggestion.dart'
    as _i5;
import 'package:farmer_market/data/repository/models/user/user.dart' as _i9;
import 'package:farmer_market/data/repository/success_failure.dart' as _i2;
import 'package:farmer_market/presentation/screens/phone_enter_screen/bloc/phone_enter_bloc.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResult_0<T, E> extends _i1.Fake implements _i2.Result<T, E> {}

/// A class which mocks [AddressRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressRepository extends _i1.Mock implements _i3.AddressRepository {
  MockAddressRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i5.Suggestion>, String>> getSuggestions(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#getSuggestions, [query]),
          returnValue: Future<_i2.Result<List<_i5.Suggestion>, String>>.value(
              _FakeResult_0<List<_i5.Suggestion>, String>())) as _i4
          .Future<_i2.Result<List<_i5.Suggestion>, String>>);
  @override
  _i4.Future<_i2.Result<dynamic, dynamic>> saveAddress(_i6.Address? address) =>
      (super.noSuchMethod(Invocation.method(#saveAddress, [address]),
              returnValue: Future<_i2.Result<dynamic, dynamic>>.value(
                  _FakeResult_0<dynamic, dynamic>()))
          as _i4.Future<_i2.Result<dynamic, dynamic>>);
  @override
  _i4.Future<_i2.Result<_i6.Address, String>> getUserAddress(String? userId) =>
      (super.noSuchMethod(Invocation.method(#getUserAddress, [userId]),
              returnValue: Future<_i2.Result<_i6.Address, String>>.value(
                  _FakeResult_0<_i6.Address, String>()))
          as _i4.Future<_i2.Result<_i6.Address, String>>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i7.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<dynamic, dynamic>> signUpWithPhone(
          {String? phone, _i8.PhoneEnterBloc? bloc}) =>
      (super.noSuchMethod(
          Invocation.method(#signUpWithPhone, [], {#phone: phone, #bloc: bloc}),
          returnValue: Future<_i2.Result<dynamic, dynamic>>.value(
              _FakeResult_0<dynamic, dynamic>())) as _i4
          .Future<_i2.Result<dynamic, dynamic>>);
  @override
  _i4.Future<_i2.Result<dynamic, dynamic>> addUserInfo(
          _i9.User? user, _i10.Uint8List? file) =>
      (super.noSuchMethod(Invocation.method(#addUserInfo, [user, file]),
              returnValue: Future<_i2.Result<dynamic, dynamic>>.value(
                  _FakeResult_0<dynamic, dynamic>()))
          as _i4.Future<_i2.Result<dynamic, dynamic>>);
  @override
  _i4.Future<_i2.Result<_i9.User, String>> getCurrentUser() =>
      (super.noSuchMethod(Invocation.method(#getCurrentUser, []),
              returnValue: Future<_i2.Result<_i9.User, String>>.value(
                  _FakeResult_0<_i9.User, String>()))
          as _i4.Future<_i2.Result<_i9.User, String>>);
  @override
  _i4.Future<String?> getUserId() =>
      (super.noSuchMethod(Invocation.method(#getUserId, []),
          returnValue: Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<_i2.Result<dynamic, dynamic>> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: Future<_i2.Result<dynamic, dynamic>>.value(
                  _FakeResult_0<dynamic, dynamic>()))
          as _i4.Future<_i2.Result<dynamic, dynamic>>);
}
